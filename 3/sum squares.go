// Дана последовательность чисел: 2,4,6,8,10. 
// Найти сумму их квадратов(22+32+42….) с использованием конкурентных вычислений

package main

import (
    "fmt"
    "sync"
)

func main() {
    numbers := []int{2, 4, 6, 8, 10}
    var wg sync.WaitGroup
    sum := 0
	// будет защищать суммирование квадратов от гонки данных, 
    // что бы не возникало одновременного обращения к sum и данные являлись актуальными
    mutex := sync.Mutex{}

    for _, num := range numbers {
        wg.Add(1)
        go func(n int) {
            defer wg.Done()
            square := n * n
            // блокировка вычисления суммы квадратов при приходе одной из горутин
            mutex.Lock()
            sum += square // вычисление суммы квадратов
            // разблокировка доступа для других горутин
            mutex.Unlock()
        }(num)
    }

    wg.Wait()
    fmt.Printf("Сумма квадратов: %d\n", sum)
}
